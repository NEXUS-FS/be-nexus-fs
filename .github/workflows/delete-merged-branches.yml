name: Delete Merged Branches (Dev)

on:
  pull_request:
    types: [closed]
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sunday at midnight

jobs:
  delete-merged-branches:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all branches

      - name: Install GitHub CLI & jq
        run: sudo apt-get update && sudo apt-get install -y gh jq

      - name: Authenticate GH CLI
        run: gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

      - name: Delete branches merged into dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TARGET_BRANCH="dev"
          echo "Target branch: $TARGET_BRANCH"

          # Enable case-insensitive regex matching
          shopt -s nocasematch

          # Fetch latest branches
          git fetch --all --prune

          # Find all branches merged into the target branch
          MERGED_BRANCHES=$(git branch -r --merged origin/$TARGET_BRANCH | \
            grep -v "HEAD" | \
            grep -v "$TARGET_BRANCH" | \
            grep -v "main" | \
            grep -v "master" | \
            sed 's/origin\///' | \
            grep -v "^[[:space:]]*$")

          if [ -z "$MERGED_BRANCHES" ]; then
            echo "No merged branches to delete"
            exit 0
          fi

          echo "Found merged branches into $TARGET_BRANCH:"
          echo "$MERGED_BRANCHES"

          for branch in $MERGED_BRANCHES; do
            # Skip protected branches
            if [[ "$branch" =~ ^(main|master|develop|dev|staging|production|release/.*)$ ]]; then
              echo "Skipping protected branch: $branch"
              continue
            fi

            # Match branches like NEXUS-123 or NEXUS-123-fix-xyz (case-insensitive)
            if [[ "$branch" =~ ^nexus-[0-9]+.*$ ]]; then
              echo "✅ Matched Nexus branch: $branch"
            else
              echo "Skipping non-Nexus branch: $branch"
              continue
            fi

            # URL-encode branch (safe for API call)
            ENCODED_BRANCH=$(echo "$branch" | jq -s -R -r @uri)

            # Check if branch exists remotely before deletion
            if git ls-remote --exit-code origin "refs/heads/$branch" >/dev/null 2>&1; then
              echo "Deleting branch: $branch"
              DELETE_RESPONSE=$(gh api \
                --method DELETE \
                -H "Accept: application/vnd.github+json" \
                "/repos/${{ github.repository }}/git/refs/heads/$ENCODED_BRANCH" 2>&1)

              if echo "$DELETE_RESPONSE" | grep -q "Reference does not exist"; then
                echo "⚠️ Branch already deleted or not found remotely: $branch"
              else
                echo "✓ Deleted $branch"
              fi
            else
              echo "⚠️ Branch not found remotely (already deleted?): $branch"
            fi
          done